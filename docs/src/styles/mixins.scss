@mixin breakpoint($point, $limited: false) {
  @if $limited == true {
    @if $point == xl {
      @media (min-width: 1200px) {
        @content;
      }
    } @else if $point == lg {
      @media (max-width: 1200px) and (min-width: 992px) {
        @content;
      }
    } @else if $point == md {
      @media (max-width: 992px) and (min-width: 720px) {
        @content;
      }
    } @else if $point == sm {
      @media (max-width: 720px) and (min-width: 576px) {
        @content;
      }
    } @else if $point == xs {
      @media (max-width: 576px) {
        @content;
      }
    }
  } @else {
    @if $point == xl {
      @media (min-width: 1200px) {
        @content;
      }
    } @else if $point == lg {
      @media (max-width: 1200px) {
        @content;
      }
    } @else if $point == md {
      @media (max-width: 992px) {
        @content;
      }
    } @else if $point == sm {
      @media (max-width: 720px) {
        @content;
      }
    } @else if $point == xs {
      @media (max-width: 576px) {
        @content;
      }
    }
  }
}

//flex-mixin
@mixin flexbox(
  $justify: flex-start,
  $align: flex-start,
  $direction: row,
  $wrap: nowrap
) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  flex-direction: $direction;
  flex-wrap: $wrap;
}
// BEM selectors
@mixin e($element) {
  &__#{$element} {
    @content;
  }
}
@mixin m($modifier) {
  &--#{$modifier} {
    @content;
  }
}

@mixin p-el($el, $el-w: null, $el-h: null) {
  @if $el == "before" or $el == "after" {
    &:#{$el} {
      display: block;
      content: "";
      position: absolute;

      width: $el-w;
      height: $el-h;
      @content;
    }
  } @else {
    @error "`#{$el}` is not a valid pseudo-element.";
  }
}
